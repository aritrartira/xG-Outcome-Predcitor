#include("util.jl")

function prob_A_win(A_xG::Array, B_xG::Array)
    reset_outcomes()
    simulate(A_xG, B_xG)
    
    fav_outcomes = 0
    for i in pairs(outcomes)
        if parse(Int16, i[1][1]) > parse(Int16, i[1][2])
            fav_outcomes = fav_outcomes + outcomes[i[1]]
        end
    end

    prob = fav_outcomes / 100000.0
    return prob
end

function prob_B_win(A_xG::Array, B_xG::Array)
    reset_outcomes()
    simulate(A_xG, B_xG)
    
    fav_outcomes = 0
    for i in pairs(outcomes)
        if parse(Int16, i[1][1]) < parse(Int16, i[1][2])
            fav_outcomes = fav_outcomes + outcomes[i[1]]
        end
    end

    prob = fav_outcomes / 100000.0
    return prob
end

function prob_draw(A_xG::Array, B_xG::Array)
    reset_outcomes()
    simulate(A_xG, B_xG)
    
    fav_outcomes = 0
    for i in pairs(outcomes)
        if parse(Int16, i[1][1]) == parse(Int16, i[1][2])
            fav_outcomes = fav_outcomes + outcomes[i[1]]
        end
    end

    prob = fav_outcomes / 100000.0
    return prob
end

function most_likely_outcome(A_xG::Array, B_xG::Array)
    reset_outcomes()
    simulate(A_xG, B_xG)
    most_likely = findmax(outcomes)[2]

    return string(most_likely[1]) * "-" * string(most_likely[2])
end

println("Most Likely Outcome: ", most_likely_outcome([0.024233000352978706, 0.023589307442307472, 0.07318258285522461, 0.5719524025917053, 0.054489538073539734, 0.07023967802524567, 0.03132713958621025, 0.11162280291318893, 0.344626784324646, 0.028496230021119118, 0.03677608445286751, 0.08288385719060898, 0.10795629024505615, 0.1563132107257843], [0.16951031982898712, 0.6114954352378845, 0.08262842893600464, 0.03686433658003807, 0.07559982687234879, 0.5810050964355469]))
println("Everton Win Probability: ", prob_B_win([0.024233000352978706, 0.023589307442307472, 0.07318258285522461, 0.5719524025917053, 0.054489538073539734, 0.07023967802524567, 0.03132713958621025, 0.11162280291318893, 0.344626784324646, 0.028496230021119118, 0.03677608445286751, 0.08288385719060898, 0.10795629024505615, 0.1563132107257843], [0.16951031982898712, 0.6114954352378845, 0.08262842893600464, 0.03686433658003807, 0.07559982687234879, 0.5810050964355469]))
println("Manchester United Win Probability: ", prob_A_win([0.024233000352978706, 0.023589307442307472, 0.07318258285522461, 0.5719524025917053, 0.054489538073539734, 0.07023967802524567, 0.03132713958621025, 0.11162280291318893, 0.344626784324646, 0.028496230021119118, 0.03677608445286751, 0.08288385719060898, 0.10795629024505615, 0.1563132107257843], [0.16951031982898712, 0.6114954352378845, 0.08262842893600464, 0.03686433658003807, 0.07559982687234879, 0.5810050964355469]))
println("Draw Probability: ", prob_draw([0.024233000352978706, 0.023589307442307472, 0.07318258285522461, 0.5719524025917053, 0.054489538073539734, 0.07023967802524567, 0.03132713958621025, 0.11162280291318893, 0.344626784324646, 0.028496230021119118, 0.03677608445286751, 0.08288385719060898, 0.10795629024505615, 0.1563132107257843], [0.16951031982898712, 0.6114954352378845, 0.08262842893600464, 0.03686433658003807, 0.07559982687234879, 0.5810050964355469]))